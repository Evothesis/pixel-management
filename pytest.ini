[tool:pytest]
# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
testpaths = tests

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=backend/app
    --cov-report=term-missing
    --cov-report=html:coverage_html
    --cov-fail-under=85

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    security: Security tests
    auth: Authentication tests
    slow: Slow tests (> 1 second)
    critical: Critical path tests requiring 95% coverage

# Minimum version requirements
minversion = 7.0

# Test collection
collect_ignore = [
    "setup.py",
    "backend/app",
    "frontend/node_modules",
    "frontend/build"
]

# Coverage settings
[coverage:run]
source = backend/app
omit = 
    */tests/*
    */venv/*
    */node_modules/*
    */build/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

# Coverage thresholds
precision = 2
show_missing = true
skip_covered = false

[coverage:html]
directory = coverage_html
title = Pixel Management Test Coverage